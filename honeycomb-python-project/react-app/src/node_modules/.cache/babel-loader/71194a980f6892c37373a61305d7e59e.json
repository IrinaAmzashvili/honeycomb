{"ast":null,"code":"const GET_CLUBS = 'clubs/GET_CLUBS'; //action creators\n\nconst loadClubs = clubs => ({\n  type: GET_CLUBS,\n  clubs\n}); //thunks\n\n\nexport const getClubs = () => async dispatch => {\n  const allClubs = await fetch('/clubs');\n  const clubs = await allClubs.json();\n\n  if (allClubs.ok) {\n    dispatch(loadClubs(clubs));\n  }\n}; //reducer\n\nconst initialState = {};\n\nconst clubsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CLUBS:\n      const allClubs = { ...state\n      };\n      action.clubs.clubs.forEach(club => {\n        allClubs[club.id] = club;\n      });\n      return allClubs;\n\n    default:\n      return state;\n  }\n};\n\nexport default clubsReducer;","map":{"version":3,"sources":["/Users/jiacui/Desktop/honeycomb-project/honeycomb/honeycomb-python-project/react-app/src/store/clubs.js"],"names":["GET_CLUBS","loadClubs","clubs","type","getClubs","dispatch","allClubs","fetch","json","ok","initialState","clubsReducer","state","action","forEach","club","id"],"mappings":"AAAA,MAAMA,SAAS,GAAG,iBAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAC1BC,EAAAA,IAAI,EAAEH,SADoB;AAE1BE,EAAAA;AAF0B,CAAZ,CAAlB,C,CAKA;;;AACA,OAAO,MAAME,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,CAA5B;AACA,QAAML,KAAK,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAApB;;AACA,MAAGF,QAAQ,CAACG,EAAZ,EAAgB;AACZJ,IAAAA,QAAQ,CAACJ,SAAS,CAACC,KAAD,CAAV,CAAR;AACH;AACJ,CANM,C,CASP;;AAEA,MAAMQ,YAAY,GAAG,EAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACV,IAAd;AACI,SAAKH,SAAL;AACI,YAAMM,QAAQ,GAAG,EAAC,GAAGM;AAAJ,OAAjB;AACAC,MAAAA,MAAM,CAACX,KAAP,CAAaA,KAAb,CAAmBY,OAAnB,CAA4BC,IAAD,IAAU;AACjCT,QAAAA,QAAQ,CAACS,IAAI,CAACC,EAAN,CAAR,GAAoBD,IAApB;AACH,OAFD;AAGA,aAAOT,QAAP;;AACJ;AACI,aAAOM,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,YAAf","sourcesContent":["const GET_CLUBS = 'clubs/GET_CLUBS';\n\n//action creators\nconst loadClubs = (clubs) => ({\n    type: GET_CLUBS,\n    clubs\n})\n\n//thunks\nexport const getClubs = () => async (dispatch) => {\n    const allClubs = await fetch('/clubs');\n    const clubs = await allClubs.json()\n    if(allClubs.ok) {\n        dispatch(loadClubs(clubs))\n    }\n}\n\n\n//reducer\n\nconst initialState = {};\n\nconst clubsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_CLUBS:\n            const allClubs = {...state}\n            action.clubs.clubs.forEach((club) => {\n                allClubs[club.id] = club\n            })\n            return allClubs;\n        default:\n            return state;\n    }\n}\n\nexport default clubsReducer;\n"]},"metadata":{},"sourceType":"module"}