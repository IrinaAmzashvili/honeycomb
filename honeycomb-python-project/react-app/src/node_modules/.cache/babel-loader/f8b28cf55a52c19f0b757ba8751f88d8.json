{"ast":null,"code":"// constants\nconst SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\n\nconst initialState = {\n  user: null\n};\nexport const authenticate = () => async dispatch => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return;\n    }\n\n    dispatch(setUser(data));\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.'];\n  }\n};\nexport const logout = () => async dispatch => {\n  const response = await fetch('/api/auth/logout', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\nexport const signUp = (username, email, password) => async dispatch => {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.'];\n  }\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        user: action.payload\n      };\n\n    case REMOVE_USER:\n      return {\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jiacui/Desktop/honeycomb-project/honeycomb/honeycomb-python-project/react-app/src/store/session.js"],"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","initialState","authenticate","dispatch","response","fetch","headers","ok","data","json","errors","login","email","password","method","body","JSON","stringify","status","logout","signUp","username","reducer","state","action"],"mappings":"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","sourcesContent":["// constants\nconst SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n})\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n  \n    dispatch(setUser(data));\n  }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  \n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch('/api/auth/logout', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\n\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { user: action.payload }\n    case REMOVE_USER:\n      return { user: null }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}